\add bio assertion, basic input output, assertions
 \in examples
  \make option -k keep, to later inspect
   \make the example script -f option to save to file and make executable
    \record script that will create an example definition

\make cursor characters with - and |, just two dimensional
\make cursor blink


\tui:use term ,curtises or urwid or Own

\itui:ipython
 \completion
  \interactive via input()
\bash completion
\fish completion

\hexy live edit shell
 \completion
  \help

\colors
 \ single color
  \ range:rainbow,steel...
   \ conditional
    \ function

\ webui:svg,pyvg,d3js etc

 \ draw     point xy
  \         line xy X/x/Y/y/Z/z size
   \
    \       shapes: hexagon [ok]
     \              triangle
      \             rectangle
       \            square(almost)
        \           ngon
         \          circle
	  \         tree (recursion!!)
\ draw fill for shapes :character
 \         string(bubble,dialog)
  \        stream/file

\ use nav characters s,S: s=+ S=-
 \  s:x,y,z
  \ S:X,Y,Z

\ optional: use center character no nav
 \ like h
  \    y u
   \  g h j
    \  v b

\ torus correction , obsolete, maybe better name "effect" instead of correction
 \        X=12
  \       x=45        #3*12 +9
   \      yc=int(X/x) #3
    \     x=x%X       #9
     \    y=yc+y%Y   

\ torus mode (default on)
 \ option to disable
  \ rectangular or z->z,y->y,x->x
   \ custom function : bubble rules like

\ also keep the negatives in mind.


\ use spoints in instead of the named line funtions for x,y,z



\ types and order of displaying:
 \ layers:different grids
  \ p:previous
   \ c:current
    \ n:next
     \ m:meta, control and cursors,etc

\ in show order layers, enable disable

\ instead of layers:set/add cell overlays

\ read
 \  read from output into grid
  \ for easy re-editing and festing
   \   hexy draw -x 3 -y 3|hexy read -
    \  read:x=3
     \ read:y=3

\ strip
 \ strip the
  \   -borders
   \  -rulers
    \ -grid


\ hexy progress bars


\ fill hexcell basdd on fuctions of ...(x,y,z)
 \ ... like sum
  \         prod
   \        sin,cos,tan
    \       custom def...

\ draw with animation
 \ create a range: -rx 1:10
  \                -ry 1:10
   \               --delay/interval
    \              --clear (flag)

\ ultimate goal:game of life: hexylife, based on hexlife
 \ count neighbours
  \ hexcells, create a bigger object as an hexagonal cell
   \ fill gol grid with read config or randomly fill
    \ rule based cell  mutation
     \ rule entry
      \ animate
       \ loop detection
        \ local loop detection
         \ editor 

\ coding style
 \ style no tabs
  \ tab to one space
  
